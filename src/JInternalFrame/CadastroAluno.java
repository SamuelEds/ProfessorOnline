/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package JInternalFrame;

import bean.alunoBEAN;
import view.Admin;
import connection.conexao;
import dao.alunoDAO;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author User
 */
public class CadastroAluno extends javax.swing.JInternalFrame {

    /**
     * Creates new form CadastroAluno
     */
    public CadastroAluno() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        matricula = new javax.swing.JTextField();
        nome = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        serie = new javax.swing.JComboBox<>();
        escola = new javax.swing.JTextField();
        telefone = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        salvar = new javax.swing.JButton();
        deletar = new javax.swing.JButton();
        pesquisar = new javax.swing.JButton();
        atualizar = new javax.swing.JButton();

        setClosable(true);
        getContentPane().setLayout(null);

        matricula.setBorder(null);
        getContentPane().add(matricula);
        matricula.setBounds(190, 510, 120, 15);

        nome.setBorder(null);
        nome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeActionPerformed(evt);
            }
        });
        getContentPane().add(nome);
        nome.setBounds(190, 290, 390, 22);

        email.setBorder(null);
        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });
        getContentPane().add(email);
        email.setBounds(190, 220, 390, 22);

        serie.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Primeiro Ano do Ensino Médio", "Segundo Ano do Ensino Médio", "Terceiro Ano do Ensino Médio" }));
        serie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serieActionPerformed(evt);
            }
        });
        getContentPane().add(serie);
        serie.setBounds(380, 510, 220, 24);

        escola.setBorder(null);
        getContentPane().add(escola);
        escola.setBounds(190, 360, 380, 15);

        telefone.setBorder(null);
        getContentPane().add(telefone);
        telefone.setBounds(190, 436, 390, 20);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/DesingAluno.png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 660, 760);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(19, 175, 70, 50);

        salvar.setBackground(new java.awt.Color(204, 204, 204));
        salvar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        salvar.setText("SALVAR DADOS");
        salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarActionPerformed(evt);
            }
        });
        getContentPane().add(salvar);
        salvar.setBounds(10, 580, 150, 50);

        deletar.setBackground(new java.awt.Color(204, 204, 204));
        deletar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        deletar.setText("DELETAR DADOS");
        deletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletarActionPerformed(evt);
            }
        });
        getContentPane().add(deletar);
        deletar.setBounds(500, 580, 150, 50);

        pesquisar.setBackground(new java.awt.Color(204, 204, 204));
        pesquisar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        pesquisar.setText("PESQUISAR DADOS");
        pesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisarActionPerformed(evt);
            }
        });
        getContentPane().add(pesquisar);
        pesquisar.setBounds(330, 580, 150, 50);

        atualizar.setBackground(new java.awt.Color(204, 204, 204));
        atualizar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        atualizar.setText("ATUALIZAR DADOS");
        atualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizarActionPerformed(evt);
            }
        });
        getContentPane().add(atualizar);
        atualizar.setBounds(170, 580, 150, 50);

        setBounds(0, 0, 670, 711);
    }// </editor-fold>//GEN-END:initComponents

    private void salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarActionPerformed
        alunoBEAN ab = new alunoBEAN();
        alunoDAO ad = new alunoDAO();

        //Validar Email
        int v = 0;

        for (int i = 0; i < email.getText().length(); i++) {
            if (email.getText().charAt(i) == '@' && email.getText().endsWith("@gmail.com")) {
                v = v + 1;
            }
        }

        if (matricula.getText().equals("") || nome.getText().equals("") || escola.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Preencha os campos obrigatórios", "AVISO", JOptionPane.ERROR_MESSAGE);
        } else {

            if (v == 1) {
                ab.setMatricula(Integer.parseInt(matricula.getText()));
                ab.setNome(nome.getText());
                ab.setEmail(email.getText());
                ab.setSerie(String.valueOf(serie.getSelectedItem()));
                ab.setEscola(escola.getText());
                ab.setTelefone(telefone.getText());

                ad.salvar(ab);
            } else {
                JOptionPane.showMessageDialog(null, "Email Inválido", "AVISO", JOptionPane.ERROR_MESSAGE);
            }

        }
    }//GEN-LAST:event_salvarActionPerformed

    private void atualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizarActionPerformed
        alunoBEAN ab = new alunoBEAN();
        alunoDAO ad = new alunoDAO();

        //Validar Email
        int v = 0;

        for (int i = 0; i < email.getText().length(); i++) {
            if (email.getText().charAt(i) == '@' && email.getText().endsWith("@gmail.com")) {
                v = v + 1;
            }
        }

        if (matricula.getText().equals("") || nome.getText().equals("") || escola.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Preencha os campos obrigatórios", "AVISO", JOptionPane.ERROR_MESSAGE);
        } else {

            if (v == 1) {
                int matri = Integer.parseInt(JOptionPane.showInputDialog("Digite a matrícula do aluno para atualização: "));
                ab.setMatricula(Integer.parseInt(matricula.getText()));
                ab.setNome(nome.getText());
                ab.setEmail(email.getText());
                ab.setSerie(String.valueOf(serie.getSelectedItem()));
                ab.setEscola(escola.getText());
                ab.setTelefone(telefone.getText());

                ad.atualizar(ab, matri);
            } else {
                JOptionPane.showMessageDialog(null, "Email Inválido", "AVISO", JOptionPane.ERROR_MESSAGE);
            }

        }
    }//GEN-LAST:event_atualizarActionPerformed

    private void pesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisarActionPerformed
        try {
            Connection con = conexao.getConnection();
            PreparedStatement stmt = null;
            ResultSet rs = null;

            int matri = Integer.parseInt(JOptionPane.showInputDialog("Digite a matrícula para Busca: "));
            stmt = con.prepareStatement("SELECT * FROM alunos WHERE matricula = '" + matri + "'");
            rs = stmt.executeQuery();

            if (rs.next()) {

                matricula.setText(String.valueOf(rs.getInt("matricula")));
                nome.setText(rs.getString("nome"));
                email.setText(rs.getString("email"));
                telefone.setText(rs.getString("telefone"));
                serie.setSelectedItem(rs.getString("serie"));
                escola.setText(rs.getString("escola"));

            } else {
                JOptionPane.showMessageDialog(null, "É preciso da matrícula para confirmação!!", "Aviso", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "É preciso da matrícula para confirmação!!", "Aviso", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_pesquisarActionPerformed

    private void deletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletarActionPerformed
        alunoDAO ad = new alunoDAO();
        int matricula = Integer.parseInt(JOptionPane.showInputDialog("Digite a matrícula para confirmação da exclusão"));

        ad.deletar(matricula);
    }//GEN-LAST:event_deletarActionPerformed

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailActionPerformed

    private void serieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_serieActionPerformed

    private void nomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomeActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new Admin().setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton atualizar;
    private javax.swing.JButton deletar;
    private javax.swing.JTextField email;
    private javax.swing.JTextField escola;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField matricula;
    private javax.swing.JTextField nome;
    private javax.swing.JButton pesquisar;
    private javax.swing.JButton salvar;
    private javax.swing.JComboBox<String> serie;
    private javax.swing.JTextField telefone;
    // End of variables declaration//GEN-END:variables
}
