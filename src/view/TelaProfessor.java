/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import JInternalFrame.GerProf;
import bean.boletimBEAN;
import connection.conexao;
import dao.boletimDAO;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class TelaProfessor extends javax.swing.JFrame {

    /**
     * Creates new form TelaProfessor
     */
    public TelaProfessor() {
        initComponents();

        nome.setEnabled(false);
        serie.setEnabled(false);
        resultado.setEnabled(false);
        media.setEnabled(false);

        puxarAlunos();
        puxarBoletim();
        
        totEscores.setText("16");
        provaP.setText("15");
        gabaritoB.setText("a,b");
        provaB.setText("a,b");
        
    }

    public void puxar(int id) {

        Connection con = conexao.getConnection();
        PreparedStatement stmt = null;
        ResultSet rs = null;

        try {
            stmt = con.prepareStatement("SELECT * FROM alunos WHERE matricula like '%" + id + "%'");
            rs = stmt.executeQuery();

            DefaultTableModel table = (DefaultTableModel) alunos.getModel();
            table.setNumRows(0);
            while (rs.next()) {
                Object[] l = {rs.getInt("matricula"), rs.getString("nome"), rs.getString("email"), rs.getString("telefone"), rs.getString("serie"), rs.getString("escola")};
                table.addRow(l);
            }

        } catch (SQLException ex) {
            Logger.getLogger(GerProf.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            conexao.closeConnection(con, stmt, rs);
        }
    }

    public void puxarAlunos() {
        Connection con = conexao.getConnection();
        PreparedStatement stmt = null;
        ResultSet rs = null;

        try {
            stmt = con.prepareStatement("SELECT * FROM alunos");
            rs = stmt.executeQuery();

            DefaultTableModel table = (DefaultTableModel) alunos.getModel();
            table.setNumRows(0);
            while (rs.next()) {
                Object[] l = {rs.getInt("matricula"), rs.getString("nome"), rs.getString("email"), rs.getString("telefone"), rs.getString("serie"), rs.getString("escola")};
                table.addRow(l);
            }

        } catch (SQLException ex) {
            Logger.getLogger(GerProf.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            conexao.closeConnection(con, stmt, rs);
        }
    }

    public void puxarBoletim() {
        Connection con = conexao.getConnection();
        PreparedStatement stmt = null;
        ResultSet rs = null;

        try {
            stmt = con.prepareStatement("SELECT * FROM boletim");
            rs = stmt.executeQuery();

            DefaultTableModel table = (DefaultTableModel) boletim.getModel();
            table.setNumRows(0);
            while (rs.next()) {
                Object[] l = {rs.getInt("matricula"),rs.getString("nome"), rs.getString("disciplina"), rs.getString("serie"), rs.getFloat("prova_parcial"), rs.getFloat("prova_bimestral"), rs.getFloat("media"), rs.getString("resultado")};
                table.addRow(l);
            }

        } catch (SQLException ex) {
            Logger.getLogger(TelaProfessor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        disciplina = new javax.swing.JComboBox<>();
        serie = new javax.swing.JTextField();
        nome = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        boletim = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        alunos = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        gabaritoB = new javax.swing.JTextField();
        provaP = new javax.swing.JTextField();
        provaB = new javax.swing.JTextField();
        media = new javax.swing.JTextField();
        resultado = new javax.swing.JTextField();
        totEscores = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cadastrarBoletim = new javax.swing.JButton();
        opcaoProfessor = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        CalculoRapidoNotaBimestral = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        disciplina.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Português", "Matemática", "Biologia", "Física", "Química", "Ed. Física", "Inglês", "Espanhol", "Geografia", "Filosofia", "Sociologia", "História" }));
        getContentPane().add(disciplina, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 190, 460, -1));

        serie.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        serie.setBorder(null);
        getContentPane().add(serie, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 130, 400, 30));

        nome.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nome.setBorder(null);
        getContentPane().add(nome, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 87, 400, 30));

        jLabel1.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Abaixo estão listados todos os alunos cadastrados no sistema:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 560, -1));

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/DadosA.png"))); // NOI18N
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 610, 320));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("Pesquisar Aluno");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 250, 160, 50));

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.setText("VOLTAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 70, 50));

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        boletim.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Matrícula", "Nome", "Disciplina", "Serie", "Prova Parcial", "Prova Bimestral", "Média", "Resultado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        boletim.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(boletim);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 20, 700, 270));

        alunos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Matricula", "Nome", "Email", "Telefone", "Série", "Escola"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        alunos.getTableHeader().setReorderingAllowed(false);
        alunos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                alunosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(alunos);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 440, 270));

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("(BOLETIM)");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, -310, -1, 40));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, 1200, 310));

        gabaritoB.setBorder(null);
        gabaritoB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gabaritoBActionPerformed(evt);
            }
        });
        getContentPane().add(gabaritoB, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 92, 170, 30));

        provaP.setBorder(null);
        getContentPane().add(provaP, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 132, 170, 30));

        provaB.setBorder(null);
        getContentPane().add(provaB, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 132, 170, 30));

        media.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        media.setBorder(null);
        getContentPane().add(media, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 180, 140, 30));

        resultado.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        resultado.setBorder(null);
        resultado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultadoActionPerformed(evt);
            }
        });
        getContentPane().add(resultado, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 178, 210, 30));

        totEscores.setBorder(null);
        totEscores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totEscoresActionPerformed(evt);
            }
        });
        getContentPane().add(totEscores, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 92, 160, 30));

        jLabel2.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Abaixo estão os cadastros de boletins dos alunos selecionados:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 290, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/DADOS.png"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 0, -1, 320));

        cadastrarBoletim.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cadastrarBoletim.setText("CADASTRAR BOLETIM");
        cadastrarBoletim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarBoletimActionPerformed(evt);
            }
        });
        getContentPane().add(cadastrarBoletim, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 241, 180, 60));

        opcaoProfessor.setBackground(new java.awt.Color(0, 0, 0));
        opcaoProfessor.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jMenu1.setText("INÍCIO");

        jMenuItem1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/home.png"))); // NOI18N
        jMenuItem1.setText("Voltar para o Login");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        opcaoProfessor.add(jMenu1);

        jMenu2.setText("| CÁLCULO DE MÉDIA");

        jMenuItem2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/gabarito.png"))); // NOI18N
        jMenuItem2.setText("Cálculo de média do bimestre");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        opcaoProfessor.add(jMenu2);

        jMenu3.setText("| EDITAR DADOS DE ALUNOS");

        jMenuItem5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jMenuItem5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/nota.png"))); // NOI18N
        jMenuItem5.setText("Editar Dados de Boletim e Média");
        jMenu3.add(jMenuItem5);

        opcaoProfessor.add(jMenu3);

        jMenu4.setText("| CÁLCULO RÁPIDO PARA NOTA DE PROVA");

        jMenuItem4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jMenuItem4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/IconeProvaParcial.png"))); // NOI18N
        jMenuItem4.setText("Cálculo de Nota Parcial");
        jMenu4.add(jMenuItem4);

        CalculoRapidoNotaBimestral.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        CalculoRapidoNotaBimestral.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/IconeProvaParcial.png"))); // NOI18N
        CalculoRapidoNotaBimestral.setText("Cálculo de Nota Bimestral");
        CalculoRapidoNotaBimestral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalculoRapidoNotaBimestralActionPerformed(evt);
            }
        });
        jMenu4.add(CalculoRapidoNotaBimestral);

        opcaoProfessor.add(jMenu4);

        jMenu5.setText("| CENTRO DE AJUDA E INFORMAÇÕES");

        jMenuItem3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jMenuItem3.setIcon(new javax.swing.ImageIcon("D:\\Programa POO\\ProfessorOnline\\src\\imgs\\duvida.png")); // NOI18N
        jMenuItem3.setText("Central de Dúvidas e Informações do sistema");
        jMenu5.add(jMenuItem3);

        opcaoProfessor.add(jMenu5);

        setJMenuBar(opcaoProfessor);

        setSize(new java.awt.Dimension(1243, 677));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            int id = Integer.parseInt(JOptionPane.showInputDialog("Digite a matricula do Aluno"));
            puxar(id);

        } catch (Exception i) {
            JOptionPane.showMessageDialog(this, "Digite uma matricula válida");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new Login().setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void cadastrarBoletimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarBoletimActionPerformed
        boletimBEAN ab = new boletimBEAN();
        boletimDAO ad = new boletimDAO();

        //Parte do Gabarito Bimestral
        String textb = gabaritoB.getText();
        String[] textob = textb.split(",");

        //Parte da Prova Parcial
        String text1 = provaP.getText();
        String[] texto1 = text1.split(",");

        //Parte da Prova Bimestral
        String text2 = provaB.getText();
        String[] texto2 = text2.split(",");

        //double n = 0; //Declarando valor de cada questão da Prova Parcial
        double n2 = 0; //Declarando valor de cada questão da Prova Bimestral 
        double totalEscores = Double.parseDouble(totEscores.getText());

        boolean validar = false; // Vai validar pra ver se existe somente letras nos campos de preenchimento do gabarito

        //Verifica se foi tudo preenchido
        if (provaP.getText().equals("") || provaB.getText().equals("") || nome.getText().equals("") || serie.getText().equals("") || gabaritoB.getText().equals("") || totEscores.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Preencha todos os campos ou Verifique os dados do(a) aluno(a)", "AVISO-LEGAL", JOptionPane.ERROR_MESSAGE);
        } else {
            if (texto2.length < textob.length) { // Verifica se os campos tem as mesmasquantidade de questões
                JOptionPane.showMessageDialog(null, "Número de questões Inválido", "Aviso", JOptionPane.ERROR_MESSAGE);
            } else {

                try { //Verifica se o valor de cada questão está em formato numérico

                    //double nmP = Double.parseDouble(JOptionPane.showInputDialog("Quanto vale uma questão da Prova Parcial? "));
                    double nmB = Double.parseDouble(JOptionPane.showInputDialog("Quanto vale uma questão da Prova Bimestral? "));

                    //System.out.println("Somente números");
                    for (int i = 0; i < textob.length; i++) { //Verifica se os campos contém somente letras e valida ou não
                        if ((textob[i].matches("[a-z]*") && texto2[i].matches("[a-z]*")) || (textob[i].matches("[A-Z]*") && texto2[i].matches("[A-Z]*"))) {
                            validar = true;
                        } else {
                            validar = false;
                            break;
                        }
                    }

                    if (validar) { //Caso os campos tenham somente texto

                        //System.out.println("Deu certo");
                        for (int i = 0; i < texto2.length; i++) { //Irá fazer o cálculo de notas

                            if (textob[i] == null ? texto2[i] == null : textob[i].equals(texto2[i])) {
                                n2 = n2 + nmB;
                            }
                        }

                        double aux = 0;
                        double toEscores = 0;
                        int totQuest = 0;

                        for (int i = 0; i < texto1.length; i++) {
                            aux = Double.parseDouble(texto1[i]);
                            toEscores = aux + toEscores;
                            totQuest++;
                        }
                        
                        DecimalFormat formato = new DecimalFormat("0.0");
                        
                        
                        
                        double nota = ((toEscores * 100) / Double.parseDouble(totEscores.getText())) / 10;

                        double mediaFinal = (nota + n2) / 2; //Irá fazer o cálculo de média final
                        
                        //System.out.println(mediaFinal);
                        
                        if (toEscores <= totalEscores) {
                            JOptionPane.showMessageDialog(null, "Nota calculada com sucesso!!");
                            
                            media.setText(String.valueOf(formato.format(mediaFinal)).replace(',','.'));

                            if (mediaFinal >= 6) { //Inserirá no banco o resultado de média
                                resultado.setText("APROVADO");
                            } else if (mediaFinal < 6 && mediaFinal >= 5) {
                                resultado.setText("RECUPERAÇÃO");
                            } else if (mediaFinal < 5) {
                                resultado.setText("REPROVADO");
                            }
                            
                            DefaultTableModel tableAlunos = (DefaultTableModel) alunos.getModel();
                            
                            float notaP = Float.parseFloat(String.valueOf(String.format("%.2f",nota)).replace(',','.'));
                            
                            
                            //Inserirá no banco todas as informações caso tudo antes satisfazer o programa
                            ab.setNome(nome.getText());
                            ab.setDisciplina(String.valueOf(disciplina.getSelectedItem()));
                            ab.setSerie(serie.getText());
                            System.out.println(notaP);
                            ab.setProvaBim(Float.parseFloat(String.valueOf(formato.format(n2)).replace(',', '.')));
                            ab.setMedia(Float.parseFloat(String.valueOf(formato.format(mediaFinal)).replace(',', '.')));
                            ab.setResultado(resultado.getText());
                            ab.setMatricula(Integer.parseInt(alunos.getValueAt(alunos.getSelectedRow(), 0).toString()));

                            ad.salvar(ab);

//                 Object[] l = {rs.getString("nome"), rs.getString("disciplina"), rs.getString("serie"), rs.getDouble("prova_parcial"), rs.getDouble("prova_bimestral"), rs.getDouble("media"), rs.getString("resultado")};
                            DefaultTableModel table = (DefaultTableModel) boletim.getModel();

                            Object[] l = {String.valueOf(ab.getMatricula()),nome.getText(), String.valueOf(disciplina.getSelectedItem()), serie.getText(), notaP, Float.parseFloat(String.valueOf(formato.format(n2)).replace(',', '.')), media.getText(), resultado.getText()};
                            table.addRow(l); //Inserir valores na tabela

                        }else{
                            JOptionPane.showMessageDialog(null,"A SOMA DOS ESCORES NÃO PODE ULTRAPASSAR O VALOR DOS ESCORES TOTAIS");
                        }

                    } else {
                        JOptionPane.showMessageDialog(null, "O MODO DE CORREÇÃO DE GABARIO SÓ É ACEITO [A - Z] ou [a - z]", "AVISO-LEGAL", JOptionPane.ERROR_MESSAGE);
                    }

                } catch (NumberFormatException ex) { //Caso seja digitado alguma letra, mostrará a mensagem abaixo
                    JOptionPane.showMessageDialog(null, "É NECESSÁRIO INFORMAR O VALOR DE UMA QUESTÃO NO FORMATO NUMÉRICO!", "AVISO-LEGAL", JOptionPane.ERROR_MESSAGE);
                }

            }
        }

        /*if(!(gabaritoP.getText().equals("") && provaP.getText().equals(""))){
            CalcularProvaParcial();
        }*/

    }//GEN-LAST:event_cadastrarBoletimActionPerformed

    private void gabaritoBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gabaritoBActionPerformed

    }//GEN-LAST:event_gabaritoBActionPerformed

    private void alunosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_alunosMouseClicked
        if (alunos.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "");
        } else {
            nome.setText(alunos.getValueAt(alunos.getSelectedRow(), 1).toString());
            serie.setText(alunos.getValueAt(alunos.getSelectedRow(), 4).toString());
        }
    }//GEN-LAST:event_alunosMouseClicked

    private void resultadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resultadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_resultadoActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        new Login().setVisible(true);

        dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        new TelaProfessor().setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void CalculoRapidoNotaBimestralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CalculoRapidoNotaBimestralActionPerformed
        //new CalculoNotaBimestral().setVisible(true);
        //dispose();
    }//GEN-LAST:event_CalculoRapidoNotaBimestralActionPerformed

    private void totEscoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totEscoresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totEscoresActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaProfessor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaProfessor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaProfessor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaProfessor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaProfessor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem CalculoRapidoNotaBimestral;
    private javax.swing.JTable alunos;
    private javax.swing.JTable boletim;
    private javax.swing.JButton cadastrarBoletim;
    private javax.swing.JComboBox<String> disciplina;
    private javax.swing.JTextField gabaritoB;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField media;
    private javax.swing.JTextField nome;
    private javax.swing.JMenuBar opcaoProfessor;
    private javax.swing.JTextField provaB;
    private javax.swing.JTextField provaP;
    private javax.swing.JTextField resultado;
    private javax.swing.JTextField serie;
    private javax.swing.JTextField totEscores;
    // End of variables declaration//GEN-END:variables
}
